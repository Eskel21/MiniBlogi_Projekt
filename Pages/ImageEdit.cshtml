﻿@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

   

    @if (SignInManager.IsSignedIn(User))
    {
        <div class="images">
        @if (User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(User);
            if (user != null && user.Picture != null)
            {
                
                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(user.Picture)" alt="User Picture">
                    <a class="break"></a>
                    <canvas id="canvas" width="300" height="300" style="border-radius:200px; background-color:#E8BCB9"></canvas>
                
            }
            else
            {
                <p>No picture available</p>
            }
        }
    </div>
    <form method="post" enctype="multipart/form-data" asp-page-handler="SaveImage">
        <label for="profileImage">Zdjęcie profilowe:</label>
        <input class="custom-file-input" type="file" id="profileImage" name="Picture" accept=".jpg, .jpeg, .png" onchange="loadImage()" />
        <input type="hidden" id="canvasData" name="CanvasData" />
        
        <div class="form-div">
        <button class="button-img" type="submit">Zapisz zmiany</button>
        </div>
    </form>
   
    }
    else
    {
        <div>Login Error</div>
    }
<script>
    function loadImage() {
        const fileInput = document.getElementById('profileImage'); 
        const canvas = document.getElementById('canvas');
        const ctx = canvas.getContext('2d');

        const file = fileInput.files[0];

        if (file) {
            const reader = new FileReader();

            reader.onload = function (e) {
                const img = new Image();
                img.onload = function () {
                    drawCircularImage(img, ctx);
                };
                img.src = e.target.result;
            };

            reader.readAsDataURL(file);
        }
    }

    function drawCircularImage(img, ctx) {
        const canvas = ctx.canvas;
        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const radius = Math.min(centerX, centerY);

        ctx.clearRect(0, 0, canvas.width, canvas.height);

        ctx.beginPath();
        ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);
        ctx.clip();

        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);

        
        ctx.lineWidth = 5;
        ctx.strokeStyle = '#000';
        ctx.stroke();

        const canvasDataUrl = canvas.toDataURL('image/png');
        document.getElementById('canvasData').value = canvasDataUrl;
    }
   
</script>